REQ-1: The OpenAPS rig must pull ___ data from the other components of the system, every X seconds or whenever this data is available.
REQ-2: If OpenAPS believes that data is insufficient for a dosing recommendation to be made, OpenAPS should still predict the effect of the fallback dosing recommendation and if this is far out of the targets it should make a dosing recommendation anyway, with a warning.
REQ-3: There should be a way for the human manually to override glucose data from the CGM / Nightscout.
REQ-4: OpenAPS should prompt the user every week to calibrate the CGM.
REQ-5: The OpenAPS rig should emit a warning if it's going out of range of the insulin pump.
REQ-6: If the insulin pump goes out of range of OpenAPS, it should fall back to normal operation.
REQ-7: OpenAPS should have watchdog timer or heartbeat communications between systems to detect if insulin pump is working properly and if not warn the user.
REQ-8: If the Insulin Pump is on low battery, OpenAPS should stop sending it commands and let it fall back to normal operation.
REQ-9: The OpenAPS algorithm must set a temporary basal dosing recommendation if the insulin dosage is not optimal and it has been over X minutes since the last temporary basal recommendation.
REQ-10: OpenAPS algorithm should be tested, validated in realtime for accuracy and designed securely.
REQ-11: If OpenAPS is having problems communicating with other devices in the loop, OpenAPS should indicate this and fallback to the human programmed basal rates.
REQ-12: OpenAPS shall warn the human actor if it is no longer connected to and/or no longer receiving information from Nightscout.
REQ-13: There should be checks for wireless interference every X minutes, and OpenAPS should send a warning to the user if there is a positive result.
REQ-14: OpenAPS plausibility check shall include examination of the raw data from the insulin pump to ensure the data is in its expected range.
REQ-15: OpenAPS must inform the human actor if the insulin pump is set to use the wrong units.
REQ-16: If the OpenAPS rig components are not connected together properly there must be an alarm, warning or error.
REQ-17: The OpenAPS rig components must connect together securely.
REQ-18: User manual must specify the correct hardware setup.
REQ-19: Software must check that all required OpenAPS dependencies are present.
REQ-20: Hardware connections need to be set up to match the configuration the human entered to the openAPS configuration.
REQ-21: Communication between components must have an integrity check.
REQ-22: Must have watchdog timer or heartbeat communications between systems to detect if insulin pump is working properly and if not warn the user.
REQ-23: OpenAPS must alert human actor if the insulin pump has stopped giving feedback.
REQ-24: OpenAPS should be able to interpret error signals from insulin pump and convey to the human actor.
REQ-25: The OpenAPS rig must have as long a battery life as possible.
REQ-26: The OpenAPS rig must alert the user when on low power.
REQ-27: The OpenAPS rig must have a safe exit process.
REQ-28: Docs must have guidelines on avoiding a low power supply.
REQ-29: If OpenAPS is having problems communicating with other devies in the loop, OpenAPS should indicate this and fallback to the human programmed basal rates.
REQ-30: OpenAPS wireless network signals must have a radio frequency between X MegaHertz and Y MegaHertz.
REQ-31: OpenAPS documentation must direct the human actor to easily use the right OpenAPS software dependencies, perhaps via an automated script.
REQ-32: If the human actor updates to incompatible software dependencies, there must be a way to restore software dependencies that work for OpenAPS easily.
REQ-33: When backward compatibility is affected by an update, it needs to be clearly flagged.
REQ-34: There should be a heartbeat mechanism to monitor activeness between systems.
REQ-35: When the OpenAPS system is running, there should not be a period of X seconds with no active dosing recommendation from OpenAPS.
REQ-36: OpenAPS application shall have a monitoring task that will check if tasks are taking too long to execute and warn the user if this occurs.
REQ-37: The insulin pump must be set to the correct time.
REQ-38: If OpenAPS is using a different time to the insulin pump, OpenAPS should notify the human actor.
REQ-39: OpenAPS should be able to register human input of glucose levels.
REQ-40: Insulin pump and OpenAPS rig must not be blocked off physically to the extent that they cannot connect, and this should be explained in the docs.
REQ-41: OpenAPS should detect the local timezone and prompt the user to change the time when this changes.
REQ-42: OpenAPS has a hardware integrity check and can communicate with all necessary peripherals.
REQ-43: OpenAPS glucose level value must match glucose data from the CGM, unless it has been overriden by a human input.
REQ-44: Processing of glucose data needs to be tested and monitored.
REQ-45: OpenAPS glucose level value must match glucose data from the CGM, unless it has been overriden by a human inputProcessing of glucose data needs to be tested and monitored.
REQ-46: OpenAPS must verify that it is set to the correct time.
REQ-47: When changing time zone, OpenAPS must either change to the correct time automatically or prompt the human actor to change the time.
REQ-48: The OpenAPS rig and it's potentially sensitive information packets must be secure and protected from being hacked into.
REQ-49: If the OpenAPS rig components are not connected together properly there must be a warning or error.
REQ-50: OpenAPS should make the human verify that the data they enter is correct.
REQ-51: If the OpenAPS rig has run out of power the pump must fall back to normal non-OpenAPS operation.
REQ-52: OpenAPS must check to see if the dependencies are on a 'compatible list' before allowing the user to make an update to OpenAPS dependencies.
REQ-53: If there are new updates to OpenAPS dependencies which would be compatible with the rest of the system, they would be added to the compatible list.
REQ-54: The time between OpenAPS being sent the data to make the dosing calculation and OpenAPS issuing and insulin dose must be < X seconds.
REQ-55: OpenAPS must be configured accurately.
REQ-56: OpenAPS must be set to the correct time.
REQ-57: OpenAPS must be aware of the correct IOB and active dosing (including OpenAPS must be made aware if the insulin pump / has been disconnected from the body or OpenAPS).
REQ-58: OpenAPS must have an accurate model of the data necessary to make a recommendation.
REQ-59: OpenAPS algorithm must use a correct insulin to glucose calculation.
REQ-60: OpenAPS must use recent glucose level data from Nightscout at all times.
REQ-61: Nightscout glucose level data must be regularly checked for accuracy by human manual glucose reading.
REQ-62: OpenAPS shall only use glucose data that has been validated from Nightscout.
REQ-63: Nightscout data shall be checked regarding plausibility of its data in comparison with the valid ranges approved by the FDA (e.g. the ones used be the pump and glucose monitor).
REQ-64: Nightscout data shall be checked regarding plausibility of state changes.
REQ-65: Nightscout data shall be checked regarding corruption and should have integrity checks.
REQ-66: OpenAPS should give a warning when human actor has provided abnormal carb data.
REQ-67: OpenAPS must include human bolus dosing in its IOB value.
REQ-68: Human bolus dosing should be encorparated into the OpenAPS IOB / active insulin figure.
REQ-69: OpenAPS must make a valid prediction of future glucose levels based on available data.
REQ-70: OpenAPS must take as much useful data as possible for its data analysis.
REQ-71: OpenAPS docs must advise human actor how they can determine the correct settings for DIA / ISF / carb ratio.
REQ-72: OpenAPS should advise human actor if something seems incorrect with the insulin pump settings.
REQ-73: OpenAPS should prompt the human for data if glucose levels are X mg lower than expected.
REQ-74: OpenAPS should get feedback from insulin pump about whether the pump has applied the dosing recommendation from OpenAPS.
REQ-75: OpenAPS should prompt the human for data if the human hasn't entered data in a long time or if glucose levels are X mg higher than expected.
REQ-76: Human actor must not suddenly consume a lot of food / sugar.
REQ-77: OpenAPS must warn the human actor if insulin is in low supply.
REQ-78: OpenAPS should prompt and possibly force glucose monitor information to be consistently manually tested by the human.
REQ-79: If there is no data or insufficient available, this shold be indicated to the user.
REQ-80: Validity of used data must be checked. Only correct data shall be used for the openAPS algorithms.
REQ-81: OpenAPS should prompt the human with the data it has and get human to verify that it should be applied.
REQ-82: If the data OpenAPS is programmed to required is received, OpenAPS must make a dosing recommendation.
REQ-83: Insulin pump should not make dosing recommendations if there are incorrect configurations which could ruin OpenAPS recommendations.
REQ-84: OpenAPS must pull all configurations from Insulin pump.
REQ-85: If there are wrong configurations, the human actor should be prompted to change these.
REQ-86: If OpenAPS cannot pull configurations from the insulin pump, the pump should go back to its normal operating mode.
REQ-87: Irregularities in the communication must be detected and actions/safe states used during communication problems.
REQ-88: Documentation must clearly request the human actor how to correctly test and apply all the insulin pump settings which would be necessary to give good dosing recommendations.
REQ-89: OpenAPS should verify whether insulin pump settings are configured correctly for OpenAPS if it is not human dependent.
REQ-90: OpenAPS should monitor IOB levels and ensure that insulin doses are going through to the pump.
REQ-91: OpenAPS must be aware of the correct IOB and active dosing.
REQ-92: OpenAPS should notify user when other components' clock time differs from rig system clock.
REQ-93: OpenAPS should only share information to authorised individuals.
REQ-94: OpenAPS shall receive warning from Nightscout if there is an operating request from another party and warn the human actor.
REQ-95: OpenAPS must have access to a timestamp of when insulin pump data was from, not just when it was sent.
REQ-96: OpenAPS data requests must always be comprehensible by the insulin pump.
REQ-97: Compatible insulin pump software and hardware versions must be specified.
REQ-98: Correct openAPS request formatting must be specified, verified and monitored.
REQ-99: OpenAPS must verify that the insulin pump software and firmware is compatible with OpenAPS.
REQ-100: OpenAPS rig and docs should be able to indicate which insulin pump software versions have been tested.
REQ-101: Compatible Nightscout versions must be specified.
REQ-102: OpenAPS should give a warning if it is connected to incompatible devices or software versions in these devices.
REQ-103: OpenAPS must make checksums and other checks to ensure the data it is using is valid.
REQ-104: OpenAPS must check the timestamps of when the data it's using is originally from to make sure it's recent data.
REQ-105: OpenAPS does not check the data to make sure that it is valid data from the correct time.
REQ-106: OpenAPS shall have a time expectation of when it receives data from the insulin pump and compare the time expectation with the timestamp - plausibility check.
REQ-107: OpenAPS plausibility check shall examine raw data received from the insulin pump to ensure that the data has not been corrupted.
REQ-108: OpenAPS must check every X minutes for all the latest information.
REQ-109: OpenAPS must not use information older than X minutes for dosing recommendation; if OpenAPS has incomplete data, the insulin pump should use the human's programmed basal rates.
REQ-110: All code should be reviewed by somebody with the required knowledge before merge.
REQ-111: OpenAPS must validate data received from insulin pump.
REQ-112: OpenAPS should use the most recent data any dosing recommendation.
REQ-113: Process scheduling in the OS must ensure enough time for OpenAPS to run its functions.
REQ-114: If there have been changes to the OpenAPS algorithm, the implications of any timing changes should be considered.
REQ-115: If the OpenAPS algorithm has a fixed time interval for making recommendations, this time interval should always be updated whenever there is a change in the algorithm's information intake interval or a delay in information intake or processing.
REQ-116: Correct scheduling must be specified and monitored.
REQ-117: Correct program flow must be specified and monitored.
REQ-118: CGM clock must be accurate and match RasPi time and real clock time, to nearest X seconds.
REQ-119: All times should be alligned with NTP or a common time source.
REQ-120: OpenAPS shall warn the human actor if Nightscout is not online.
REQ-121: OpenAPS shall have a time expectation of when it receives data from Nightscout and compare the time expectation with the timestamp - plausibility check.
REQ-122: OpenAPS shall perform compatibility checks with all interfacing applications and software and warn the human actor if there is an incompatibility detected.
REQ-123: OpenAPS shall have time expectation, plausiblity check, and check of timestamp to ensure validity of data.
REQ-124: Human actor must verify the CGM readings every X hours with a glucose meter.
REQ-125: OpenAPS should give a warning if it is connected to an incompatible version of Nightscout.
REQ-126: Timestamping needs to match with CGM and RasPi clock and real clock with X seconds .
REQ-127: Timestamp needs to be accurate time of the reading rather than the time of the data transfer.
REQ-128: If possible, OpenAPS must monitor insulin pump battery.
REQ-129: OpenAPS must make less than X requests to the insulin pump per minute.
REQ-130: Correct openAPS request timing must be specified, verified and monitored.
REQ-131: When the human is close to experiencing hypoglycemia, OpenAPS must suspend the insulin pump or at least audibly alert the human user to suspend the insulin pump, within X minutes.
REQ-132: Algorithm values for glucose levels must be accurate.
REQ-133: OpenAPS must notify the human when OpenAPS is suspending insulin dosing.
REQ-134: If the human turns the pump on again after OpenAPS has suspended the pump, if the human still has hypoglycemia then OpenAPS must again suspend the pump, within X minutes of the pump being turned on again.
REQ-135: OpenAPS glucose level projections must be verified, and projection calculations must be refined if projections are regularly inaccurate.
REQ-136: OpenAPS should not suspend insulin dosing when the human is not close to experiencing hypoglycemia.
REQ-137: OpenAPS should inform the human actor when it suspends the insulin pump (due to a problem with the insulin pump).
REQ-138: OpenAPS shall employ a monitoring task to ensure that all safety-related threads in the application are triggered by the kernel on a timely basis (e.g. watchdog timer).
REQ-139: OpenAPS should notify user when other components' clock time differs from RasPi system clock.
REQ-140: OpenAPS must suspend insulin dosing within X minutes after the human is experiencing or close to experiencing hypoglycemia (same as controller constraint).
REQ-141: OpenAPS rig setup instructions should be clear, complete, easy to find and cover all possible hardware.
REQ-142: There should be a way for errors in the OpenAPS instructions to be reported.
REQ-143: There should only be one set of official OpenAPS instructions online, which contains all the information that needs to be known to use OpenAPS safely.
REQ-144: OpenAPS rig hardware setup should be tested for robustness and fragiliity.
REQ-145: OpenAPS should send a warning to human actor when human actor hasn't set up the rig matching with the configurations.
REQ-146: Whenever a change is made to the OpenAPS system or the compatible versions change, the docs should be updated.
REQ-147: There should only be one set of official OpenAPS documentation available for the human actor to read, which contain all information that is in any other instructions found online.
REQ-148: If there is a change to the system, the documentation should be updated to reflect this.
REQ-149: OpenAPS docs regarding other components should be reviewed regularly, in keeping with the latest recommended approach.
REQ-150: OpenAPS should notify user when SD card is of the wrong size or format.
REQ-151: Important information in docs should be easy to find in the hardware setup area of the docs.
REQ-152: The OpenAPS docs must be easy to navigate, with a search bar.
REQ-153: OpenAPS should detect if incompatible insulin pump software is being used and indicate this to the user.
REQ-154: When new updates have been tested to be compatible, OpenAPS should issue an email notification.
REQ-155: OpenAPS should list compatible versions in the documentation.
REQ-156: OpenAPS should check that human is using compatible versions of components. New versions of components should be tested.
REQ-157: Add configuration check between systems including of their software/firmware versions used and only allow system to work with insulin pumps that have been properly tested.
REQ-158: Add prompts in OpenAPS UI that insists that human reviews and understands instructions prior to/during/after setting up the rig.
REQ-159: Nice to have is an educational video on how to set up the rig.
REQ-160: Any errors that are found in the insulin pump instructions should be listed in the OpenAPS documentation.
REQ-161: There should be a way for errors in the insulin pump instructions to be directed to OpenAPS.
REQ-162: OpenAPS should check that all the necessary system dependencies are installed before looping.
REQ-163: The dependencies script must install all of the dependencies correctly.
REQ-164: OpenAPS should use only well trusted and well tested dependencies.
REQ-165: There should be e-mail notifications of available OpenAPS updates.
REQ-166: Human must be able to select their preferred frequencies of notifications.
REQ-167: The versions of OpenAPS dependencies that are installed should be fixed.
REQ-168: Somebody should keep a look out and test for major updates to OpenAPS dependencies.
REQ-169: Major updates to OpenAPS should be tested.
REQ-170: There should be an e-mail or OpenAPS prompt to update dependencies when newer versions are being used.
REQ-171: OpenAPS docs should advise the human to only install dependencies via dependencies script (or at least see the versions here) and not manually.
REQ-172: Human actor must get a notification e-mail when sofware versions change.
REQ-173: OpenAPS should not provide dosing recommendations if it has not been tested to be safely compatible with the software versions of other components in the system.
REQ-174: Human actor should be discouraged from installing any other dependencies that are not in the installation script.
REQ-175: Where possible, OpenAPS should detect a change in the loop setup and request that the human actor updates the configurations.
REQ-176: If there is a change in the components that OpenAPS is physically connected to, OpenAPS should prompt the human actor to review the configurations.
REQ-177: OpenAPS safe defaults should be verified as part of each release.
REQ-178: Developers should try and involve any new device which would improve the functionality of OpenAPS.
REQ-179: OpenAPS should follow good secure coding practices.
REQ-180: OpenAPS rig should ask for verification when the human actor has requested information.
REQ-181: OpenAPS should make the human verify their selections after configuring OpenAPS.
REQ-182: Human actor should be warned to use only oref 0.
REQ-183: OpenAPS should have an expiremental mode for human actor to play with other algorithms.
REQ-184: The OpenAPS should inform the human when there is a new update available.
REQ-185: Whenever there is a improvement to the algorithm, human actor gets a notification email.
REQ-186: OpenAPS system should come / start with test mode and the user should be aware that this is not a toy and documentation should outline major "Don'ts" as much as possible.
REQ-187: There should be e-mail notifications of available algorithm updates.
REQ-188: OpenAPS must inform the human actor whether it's recommendations are being applied.
REQ-189: OpenAPS must alarm the human actor if it suddenly stops or starts working.
REQ-190: OpenAPS should get feedback from the insulin pump when it has administered a dose, and should send this to the user.
REQ-191: Human actor should track blood glucose levels to make sure the OpenAPS treatment is working.
REQ-192: There should be feedback to the user indicating whether OpenAPS is successfully issuing dosing recommendations to the user.
REQ-193: OpenAPS information should be verified and not compromised.
REQ-194: Human should be able to override the guidance of OpenAPS and keep OpenAPS running.
REQ-195: When the OpenAPS rig is disconnected, the insulin pump should fall back to normal operation.
REQ-196: OpenAPS system should supply a reason if it suggests that it needs to be turned off.
REQ-197: When human actor switches off the OpenAPS rig suddenly, the insulin pump goes back to normal operation and OpenAPS settings are retained as before.
REQ-198: If the OpenAPS rig is disconnected, the insulin pump should go back to regular operation.
REQ-199: There should be a forum and a resource which the human can use to understand the OpenAPS logs.
REQ-200: Human actor needs to know what to do and how to check if the insulin dosing is working.
REQ-201: Include prompt or message in the OpenAPS UI that OpenAPS is still booting up; nothing is wrong.
REQ-202: All of the buttons on the OpenAPS rig should be clearly labelled.
REQ-203: Any parts of the OpenAPS rig that should be treated with care should come with a warning.
REQ-204: Any parts of an OpenAPS rig that should be treated with care should come with a warning.
REQ-205: Warning should be easy to see for user and there should be a warning symbol permanently present when there is a problem.
REQ-206: The human should have the option to avoid entering meal data.
REQ-207: Any safety critical input should trigger a prompt for verification.
REQ-208: OpenAPS should warn the human actor if human has not input useful daily information in X hours.
REQ-209: Any OpenAPS relevant gap in insulin pump documentation that is found by a user should be recorded in OpenAPS documentation or the OpenAPS forum.
REQ-210: OpenAPS documentation should make it clear that the human will be able to operate the pump manually, before the human puts the loop in place.
REQ-211: OpenAPS should give notification either when human entry to insulin pump looks incorrect or when human actor may have forgotten to enter info into the insulin pump. Human should still have ability to make decision (repeated requirement).
REQ-212: If mealtime data hasn't been entered into the insulin pump or OpenAPS rig for a long time, OpenAPS should estimate the meal data or prompt the human to enter their meal data.
REQ-213: OpenAPS should give notification either when human entry to insulin pump looks incorrect or when human actor may have forgotten to enter info into the insulin pump. Human should still have ability to make decision.
REQ-214: If the user data given to OpenAPS is causing recommendations which are leading to a non-optimal glucose level, OpenAPS should adjust it's dosing recommendation and remind the human user to check the calibration of the CGM.
REQ-215: OpenAPS should not provide dosing recommendations if the insulin pump is not configured correctly for OpenAPS use.
REQ-216: OpenAPS instructions and any complexities should be as clear as possible.
REQ-217: OpenAPS documentation should state a time limit in which to provide meal data.
REQ-218: Insulin pump or OpenAPS docs should recommend a timeframe to provide meal data to the insulin pump.
REQ-219: Make sure human knows the time for the insulin to react in their body and sets the advanced time (by X minutes) accordingly.
REQ-220: OpenAPS instructions must be clear and non-ambiguous.
REQ-221: OpenAPS system should come / start with test mode.
REQ-222: User should be aware that this is not a toy and documentation should outline major "Don'ts" as much as possible.
REQ-223: There should be multiple reviews including signoffs and phase gates prior to release of OpenAPS instructions.
REQ-224: OpenAPS should give a warning when human actor has provided non recommended configurations.
REQ-225: The human should be able to ask questions to an OpenAPS forum and preferably communicate with maintainers of the repository.
REQ-226: OpenAPS should request the insulin pump settings / configurations and compare them to recommended values.
REQ-227: OpenAPS should make a notification when the insulin pump settings do not match the recommended configuration in the OpenAPS documentation with X frequency.